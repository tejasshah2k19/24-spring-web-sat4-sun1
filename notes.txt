eclipse -> spring.io -> project create -> eclipse import 
spring starter 

eclipse ->spring plugins -> spring features -> STS 
vscode -> 

STS
iJ 



spring web -> .xml configuration -> 
BOOT -> zero configuration -> no xml 
	custom configuration -> 
			server port 
			db url username password 
			application.properties
				key=value  

1) Spring WEB MVC 
2) Spring REST API 

------------------------------------------------------------------------------------------

file => new => spring starter project => name , group , artifact , mave , 17 , package:com 
		dep add => spring web , spring dev tools
		finish 

	jsp support => project => tomcat embedded jasper 
	 
-----------------------------------------------------------------------------------------
STS -> jsp -> not support -> 
	J2EE -> jsp -> 
	
		Help -> Eclipse Marketplace -> popular-> java and webdeveloper -> install 
		
----------------------------------------------------------------

application.properties 
	key=value 

?	src ->main -> resources -> 	


	server ->port ->change 



LoginServlet
SignupServlet
XX
XX
XX
XX

Controller -> method method method 
SessionController 
ProductController 
CartController 
OrderController 





request.getParameter("firstName");  -> remove 

POJO => 
BEAN Class => class -> variable -> private -> getters setters -> 

-------------------------------------------------------------

validate InputNumber.jsp --> required field-> 
			n1
			n2
			opr
			
			error -> true -> return "InputXXX" 
					 false -> process
					 
-------------------------------------------------------------					  
			
validation using spring ->	

	1) validator -> jar {pom.xml} 
		right click on project -> 
				click on spring -> add starter -> 
				
	2) validation rule -> annotation -> 
			
				firstName -> not blank 
						  -> only alphabets 
						  
  3) @Validated -> rule check 
  4) BindingResult -> 
						  
-------------------------------------------------------------					  


we can not access views/jsp directly 
	we need to access jsp using controller 
	
		you must have to create @Getmapping("/url") to open the jsp 
		jsp will access via above url 
		
		
		jsp input -> submit -> action -> method=post 
			@Postmapping("/url") -> request process -> 
			
			
	if you want to transfer data from controller -> to next page 
		you have to Model interface from spring.ui 
		Model is same as request.setAttribute("",""); 
				
----------------------------------------------------------------------			
	
	How to read data in spring?
	@Postmapping("/url") 
		we can read input using bean class 
		
	we dont need to user request.getParameter("xxX"); 
	we have to use pojo class -> bean class -> getters setters 	
-----------------------------------------------------------------------		
	
	how to establish db connection?
	how to do jdbc? 
	how to perform crud? 
	
	spring + database 
					

	1) lib/dep/jar ->pom.xml
				1.1) spring jdbc [ spring data jdbc  ]  
				1.2) database drivers [mysql driver] [mysql->connector , oracle->classes12.jar ] 
					

	2) configuration --> application.properties  
		driverClass
		url
		userName
		password 
		
-----------------------------------------------------------------------------
		
	query execution := 
	
	database -> sql ->query->run 
	
	Connection 
	PreparedStatement
	
	JdbcTempalte -> is responsible to execute your sql queries 
	
		update() -> insert update delete 
		query()
		queryForObject()
	
	@Autowired 
	JdbcTemplate stmt; 
		
	where we write sql queries ? in which class ? 
	dao folder -> class -> method -> query 
	
	
	product -> 
		productId
		name 
		price 
		qty 
		discount 
		category 
		
	create table products(
		productId integer primary key auto_increment,
		name varchar(20),
		price integer,
		qty int,
		discount int,
		category varchar(20)
		);
	
-------------------------------------------------------------------------------	
	 
	@Getmppaing -> jsp - open -> read product info 
	@Postmapping -> request read -> dao -> insert  
			


	






















